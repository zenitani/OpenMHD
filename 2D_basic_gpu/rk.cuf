!-----------------------------------------------------------------------
!    Runge-Kutta routines
!-----------------------------------------------------------------------
! This file contains TVD-RK2 routines and standard RK2 routines
! Note that these routines assume dx == dy.


! 1/2 step of TVD Runge=Kutta method
attributes(global) &
subroutine rk_tvd21(wk,wk1,wF,wG,dt,dx,ix,jx)
  implicit none
  include 'param.h'
!-----------------------------------------------------------------------
  integer, value :: ix, jx
  real(8), device, intent(in) :: wk(ix,jx,var1)
  real(8), device, intent(out):: wk1(ix,jx,var1)
  real(8), device, intent(in) :: wF(ix,jx,var1), wG(ix,jx,var1)
  real(8), device, intent(in) :: dt, dx
!-----------------------------------------------------------------------
  integer, device :: i, j, k
  real(8), device :: dtx

  dtx = dt/dx
!  dtx = dt
!  write(6,*) dt, dx, dtx
  j = (blockIdx%y-1)*blockDim%y + threadIdx%y
  i = (blockIdx%x-1)*blockDim%x + threadIdx%x
  if( (2<=i).and.(i<=(ix-1)).and.(2<=j).and.(j<=(jx-1)) ) then
     do k=1,var1
        wk1(i,j,k) = wk(i,j,k) + &
             dtx * ( wF(i-1,j,k) - wF(i,j,k) + wG(i,j-1,k) - wG(i,j,k) )
     enddo
  endif

  return
end subroutine rk_tvd21


! 2/2 step of TVD Runge=Kutta method
attributes(global) &
subroutine rk_tvd22(wk,wk1,wF,wG,dt,dx,ix,jx)
  implicit none
  include 'param.h'
!-----------------------------------------------------------------------
  integer, value :: ix, jx
  real(8), device, intent(inout) :: wk(ix,jx,var1)
  real(8), device, intent(in) :: wk1(ix,jx,var1)
  real(8), device, intent(in) :: wF(ix,jx,var1), wG(ix,jx,var1)
  real(8), device, intent(in) :: dt, dx
!-----------------------------------------------------------------------
  integer, device :: i, j, k
  real(8), device :: dtx

  dtx = dt/dx
  j = (blockIdx%y-1)*blockDim%y + threadIdx%y
  i = (blockIdx%x-1)*blockDim%x + threadIdx%x
  if( (2<=i).and.(i<=(ix-1)).and.(2<=j).and.(j<=(jx-1)) ) then
     do k=1,var1
        wk(i,j,k) = 0.5d0*( wk(i,j,k)+wk1(i,j,k) + &
             dtx * ( wF(i-1,j,k) - wF(i,j,k) + wG(i,j-1,k) - wG(i,j,k) ) &
             )
     enddo
  endif

  return
end subroutine rk_tvd22


! 1/2 step of the standard Runge=Kutta method
attributes(global) &
subroutine rk_std21(wk,wk1,wF,wG,dt,dx,ix,jx)
  implicit none
  include 'param.h'
!-----------------------------------------------------------------------
  integer, value :: ix, jx
  real(8), device, intent(in) :: wk(ix,jx,var1)
  real(8), device, intent(out):: wk1(ix,jx,var1)
  real(8), device, intent(in) :: wF(ix,jx,var1), wG(ix,jx,var1)
  real(8), device, intent(in) :: dt, dx
!-----------------------------------------------------------------------
  integer, device :: i, j, k
  real(8), device :: dtx

  dtx = 0.5d0*dt/dx
!  dtx = dt
!  write(6,*) dt, dx, dtx
  j = (blockIdx%y-1)*blockDim%y + threadIdx%y
  i = (blockIdx%x-1)*blockDim%x + threadIdx%x
  if( (2<=i).and.(i<=(ix-1)).and.(2<=j).and.(j<=(jx-1)) ) then
     do k=1,var1
        wk1(i,j,k) = wk(i,j,k) + &
             dtx * ( wF(i-1,j,k) - wF(i,j,k) + wG(i,j-1,k) - wG(i,j,k) )
     enddo
  endif

  return
end subroutine rk_std21


! 2/2 step of the standard Runge=Kutta method
attributes(global) &
subroutine rk_std22(wk,wF,wG,dt,dx,ix,jx)
  implicit none
  include 'param.h'
!-----------------------------------------------------------------------
  integer, value :: ix, jx
  real(8), device, intent(inout) :: wk(ix,jx,var1)
  real(8), device, intent(in) :: wF(ix,jx,var1), wG(ix,jx,var1)
  real(8), device, intent(in) :: dt, dx
!-----------------------------------------------------------------------
  integer, device :: i, j, k
  real(8), device :: dtx

  dtx = dt/dx
  j = (blockIdx%y-1)*blockDim%y + threadIdx%y
  i = (blockIdx%x-1)*blockDim%x + threadIdx%x
  if( (2<=i).and.(i<=(ix-1)).and.(2<=j).and.(j<=(jx-1)) ) then
     do k=1,var1
        wk(i,j,k) = wk(i,j,k) + &
             dtx * ( wF(i-1,j,k) - wF(i,j,k) + wG(i,j-1,k) - wG(i,j,k) )
     enddo
  endif
  
  return
end subroutine rk_std22
